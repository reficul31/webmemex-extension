// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`navigation snapshot tests should test against the given snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <nav
    className="root"
>
    <h1
        className="title"
    >
        Web Memex
    </h1>
    <ul
        className="nav"
    >
        <li
            className="navItem"
        >
            <Link
                className="navLink isActive"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/import"
            >
                Import
            </Link>
        </li>
        <li
            className="navItem"
        >
            <Link
                className="navLink"
                onlyActiveOnIndex={false}
                style={Object {}}
                to="/settings"
            >
                Settings
            </Link>
        </li>
    </ul>
</nav>,
  "nodes": Array [
    <nav
      className="root"
>
      <h1
            className="title"
      >
            Web Memex
      </h1>
      <ul
            className="nav"
      >
            <li
                  className="navItem"
            >
                  <Link
                        className="navLink isActive"
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/import"
                  >
                        Import
                  </Link>
            </li>
            <li
                  className="navItem"
            >
                  <Link
                        className="navLink"
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/settings"
                  >
                        Settings
                  </Link>
            </li>
      </ul>
</nav>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Navigation
        currentLocation={
                Object {
                        "component": [Function],
                        "name": "Import",
                        "pathname": "/import",
                      }
        }
        routes={
                Array [
                        Object {
                          "component": [Function],
                          "name": "Import",
                          "pathname": "/import",
                        },
                        Object {
                          "component": [Function],
                          "name": "Settings",
                          "pathname": "/settings",
                        },
                      ]
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "currentLocation": Object {
            "component": [Function],
            "name": "Import",
            "pathname": "/import",
          },
          "routes": Array [
            Object {
              "component": [Function],
              "name": "Import",
              "pathname": "/import",
            },
            Object {
              "component": [Function],
              "name": "Settings",
              "pathname": "/settings",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <nav
          className="root"
>
          <h1
                    className="title"
          >
                    Web Memex
          </h1>
          <ul
                    className="nav"
          >
                    <li
                              className="navItem"
                    >
                              <Link
                                        className="navLink isActive"
                                        onlyActiveOnIndex={false}
                                        style={Object {}}
                                        to="/import"
                              >
                                        Import
                              </Link>
                    </li>
                    <li
                              className="navItem"
                    >
                              <Link
                                        className="navLink"
                                        onlyActiveOnIndex={false}
                                        style={Object {}}
                                        to="/settings"
                              >
                                        Settings
                              </Link>
                    </li>
          </ul>
</nav>,
        "_debugID": 2,
        "_renderedOutput": <nav
          className="root"
>
          <h1
                    className="title"
          >
                    Web Memex
          </h1>
          <ul
                    className="nav"
          >
                    <li
                              className="navItem"
                    >
                              <Link
                                        className="navLink isActive"
                                        onlyActiveOnIndex={false}
                                        style={Object {}}
                                        to="/import"
                              >
                                        Import
                              </Link>
                    </li>
                    <li
                              className="navItem"
                    >
                              <Link
                                        className="navLink"
                                        onlyActiveOnIndex={false}
                                        style={Object {}}
                                        to="/settings"
                              >
                                        Settings
                              </Link>
                    </li>
          </ul>
</nav>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Navigation
    currentLocation={
        Object {
            "component": [Function],
            "name": "Import",
            "pathname": "/import",
          }
    }
    routes={
        Array [
            Object {
              "component": [Function],
              "name": "Import",
              "pathname": "/import",
            },
            Object {
              "component": [Function],
              "name": "Settings",
              "pathname": "/settings",
            },
          ]
    }
/>,
}
`;
