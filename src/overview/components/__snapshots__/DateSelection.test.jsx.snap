// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DateSelection should test against the given snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <t
    allowSameDay={false}
    className="root"
    customInput={
        <Input
            icon="calendar"
            iconPosition="left"
            size="huge"
            type="text"
        />
    }
    dateFormat="DD-MM-YYYY"
    dateFormatCalendar="MMMM YYYY"
    disabled={false}
    disabledKeyboardNavigation={false}
    dropdownMode="scroll"
    isClearable={true}
    maxDate={null}
    monthsShown={1}
    onBlur={[Function]}
    onChange={[Function]}
    onClickOutside={[Function]}
    onFocus={[Function]}
    onMonthChange={[Function]}
    onSelect={[Function]}
    openToDate={null}
    placeholderText="jump to date…"
    popoverAttachment="top right"
    popoverTargetAttachment="bottom right"
    popoverTargetOffset="10px 0"
    selected={undefined}
    tetherConstraints={
        Array [
            Object {
              "attachment": "together",
              "to": "window",
            },
          ]
    }
    utcOffset={NaN}
    withPortal={false}
/>,
  "nodes": Array [
    <t
      allowSameDay={false}
      className="root"
      customInput={
            <Input
                  icon="calendar"
                  iconPosition="left"
                  size="huge"
                  type="text"
            />
      }
      dateFormat="DD-MM-YYYY"
      dateFormatCalendar="MMMM YYYY"
      disabled={false}
      disabledKeyboardNavigation={false}
      dropdownMode="scroll"
      isClearable={true}
      maxDate={null}
      monthsShown={1}
      onBlur={[Function]}
      onChange={[Function]}
      onClickOutside={[Function]}
      onFocus={[Function]}
      onMonthChange={[Function]}
      onSelect={[Function]}
      openToDate={null}
      placeholderText="jump to date…"
      popoverAttachment="top right"
      popoverTargetAttachment="bottom right"
      popoverTargetOffset="10px 0"
      selected={undefined}
      tetherConstraints={
            Array [
                  Object {
                    "attachment": "together",
                    "to": "window",
                  },
                ]
      }
      utcOffset={NaN}
      withPortal={false}
/>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <DateSelection
        date={undefined}
        onDateChange={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "date": undefined,
          "onDateChange": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <t
          allowSameDay={false}
          className="root"
          customInput={
                    <Input
                              icon="calendar"
                              iconPosition="left"
                              size="huge"
                              type="text"
                    />
          }
          dateFormat="DD-MM-YYYY"
          dateFormatCalendar="MMMM YYYY"
          disabled={false}
          disabledKeyboardNavigation={false}
          dropdownMode="scroll"
          isClearable={true}
          maxDate={null}
          monthsShown={1}
          onBlur={[Function]}
          onChange={[Function]}
          onClickOutside={[Function]}
          onFocus={[Function]}
          onMonthChange={[Function]}
          onSelect={[Function]}
          openToDate={null}
          placeholderText="jump to date…"
          popoverAttachment="top right"
          popoverTargetAttachment="bottom right"
          popoverTargetOffset="10px 0"
          selected={undefined}
          tetherConstraints={
                    Array [
                              Object {
                                "attachment": "together",
                                "to": "window",
                              },
                            ]
          }
          utcOffset={NaN}
          withPortal={false}
/>,
        "_debugID": 2,
        "_renderedOutput": <t
          allowSameDay={false}
          className="root"
          customInput={
                    <Input
                              icon="calendar"
                              iconPosition="left"
                              size="huge"
                              type="text"
                    />
          }
          dateFormat="DD-MM-YYYY"
          dateFormatCalendar="MMMM YYYY"
          disabled={false}
          disabledKeyboardNavigation={false}
          dropdownMode="scroll"
          isClearable={true}
          maxDate={null}
          monthsShown={1}
          onBlur={[Function]}
          onChange={[Function]}
          onClickOutside={[Function]}
          onFocus={[Function]}
          onMonthChange={[Function]}
          onSelect={[Function]}
          openToDate={null}
          placeholderText="jump to date…"
          popoverAttachment="top right"
          popoverTargetAttachment="bottom right"
          popoverTargetOffset="10px 0"
          selected={undefined}
          tetherConstraints={
                    Array [
                              Object {
                                "attachment": "together",
                                "to": "window",
                              },
                            ]
          }
          utcOffset={NaN}
          withPortal={false}
/>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <DateSelection
    date={undefined}
    onDateChange={[Function]}
/>,
}
`;
